% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day21.R
\name{day21}
\alias{day21}
\alias{deduce_safe_ingredients}
\alias{deduce_allergenic_ingredients}
\alias{example_ingredients}
\title{Day 21: Allergen Assessment}
\usage{
deduce_safe_ingredients(x)

deduce_allergenic_ingredients(x)

example_ingredients(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{deduce_safe_ingredients(x)} returns a character vector
with all of the safe ingredients. For Part Two,
\code{deduce_allergenic_ingredients(x)} returns a comma-separated string of the
allergen names.
}
\description{
\href{https://adventofcode.com/2020/day/21}{Allergen Assessment}
}
\details{
\strong{Part One}

You reach the train\'s last stop and the closest you can get to your
vacation island without getting wet. There aren\'t even any boats here,
but nothing can stop you now: you build a raft. You just need a few
days\' worth of food for your journey.

You don\'t speak the local language, so you can\'t read any ingredients
lists. However, sometimes, allergens are listed in a language you \emph{do}
understand. You should be able to use this information to determine
which ingredient contains which allergen and [work out which foods are
safe]{title="I actually considered doing this once. I do not recommend it."}
to take with you on your trip.

You start by compiling a list of foods (your puzzle input), one food per
line. Each line includes that food\'s \emph{ingredients list} followed by
some or all of the allergens the food contains.

Each allergen is found in exactly one ingredient. Each ingredient
contains zero or one allergen. \emph{Allergens aren\'t always marked}; when
they\'re listed (as in \verb{(contains nuts, shellfish)} after an ingredients
list), the ingredient that contains each listed allergen will be
\emph{somewhere in the corresponding ingredients list}. However, even if an
allergen isn\'t listed, the ingredient that contains that allergen could
still be present: maybe they forgot to label it, or maybe it was labeled
in a language you don\'t know.

For example, consider the following list of foods:\preformatted{mxmxvkd kfcds sqjhc nhms (contains dairy, fish)
trh fvjkl sbzzf mxmxvkd (contains dairy)
sqjhc fvjkl (contains soy)
sqjhc mxmxvkd sbzzf (contains fish)
}

The first food in the list has four ingredients (written in a language
you don\'t understand): \code{mxmxvkd}, \code{kfcds}, \code{sqjhc}, and \code{nhms}. While
the food might contain other allergens, a few allergens the food
definitely contains are listed afterward: \code{dairy} and \code{fish}.

The first step is to determine which ingredients \emph{can\'t possibly}
contain any of the allergens in any food in your list. In the above
example, none of the ingredients \code{kfcds}, \code{nhms}, \code{sbzzf}, or \code{trh} can
contain an allergen. Counting the number of times any of these
ingredients appear in any ingredients list produces \emph{\code{5}}: they all
appear once each except \code{sbzzf}, which appears twice.

Determine which ingredients cannot possibly contain any of the allergens
in your list. \emph{How many times do any of those ingredients appear?}

\strong{Part Two}

Now that you\'ve isolated the inert ingredients, you should have enough
information to figure out which ingredient contains which allergen.

In the above example:
\itemize{
\item \code{mxmxvkd} contains \code{dairy}.
\item \code{sqjhc} contains \code{fish}.
\item \code{fvjkl} contains \code{soy}.
}

Arrange the ingredients \emph{alphabetically by their allergen} and separate
them by commas to produce your \emph{canonical dangerous ingredient list}.
(There should \emph{not be any spaces} in your canonical dangerous ingredient
list.) In the above example, this would be \emph{\verb{mxmxvkd,sqjhc,fvjkl}}.

Time to stock your raft with supplies. \emph{What is your canonical dangerous
ingredient list?}
}
\examples{
deduce_safe_ingredients(example_ingredients())
deduce_allergenic_ingredients(example_ingredients())
}
