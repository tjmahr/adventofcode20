% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day25.R
\name{day25}
\alias{day25}
\alias{solve_handshake_encryption_key}
\alias{example_handshake_data}
\title{Day 25: Combo Breaker}
\usage{
solve_handshake_encryption_key(x)

example_handshake_data(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{f25a(x)} returns .... For Part Two,
\code{f25b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2020/day/25}{Combo Breaker}
}
\details{
\strong{Part One}

You finally reach the check-in desk. Unfortunately, their registration
systems are currently offline, and they cannot check you in. Noticing
the look on your face, they quickly add that tech support is already on
the way! They even created all the room keys this morning; you can take
yours now and give them your room deposit once the registration system
comes back online.

The room key is a small
\href{https://en.wikipedia.org/wiki/Radio-frequency_identification}{RFID}
card. Your room is on the 25th floor and the elevators are also
temporarily out of service, so it takes what little energy you have left
to even climb the stairs and navigate the halls. You finally reach the
door to your room, swipe your card, and - \emph{beep} - the light turns red.

Examining the card more closely, you discover a phone number for tech
support.

\"Hello! How can we help you today?\" You explain the situation.

\"Well, it sounds like the card isn\'t sending the right command to
unlock the door. If you go back to the check-in desk, surely someone
there can reset it for you.\" Still catching your breath, you describe
the status of the elevator and the exact number of stairs you just had
to climb.

\"I see! Well, your only other option would be to reverse-engineer the
cryptographic handshake the card does with the door and then inject your
own commands into the data stream, but that\'s definitely impossible.\"
You thank them for their time.

Unfortunately for the door, you know a thing or two about cryptographic
handshakes.

The handshake used by the card and the door involves an operation that
\emph{transforms} a \emph{subject number}. To transform a subject number, start
with the value \code{1}. Then, a number of times called the \emph{loop size},
perform the following steps:
\itemize{
\item Set the value to itself multiplied by the \emph{subject number}.
\item Set the value to the remainder after dividing the value by
\emph{\code{20201227}}.
}

The card always uses a specific, secret \emph{loop size} when it transforms a
subject number. The door always uses a different, secret loop size.

The cryptographic handshake works like this:
\itemize{
\item The \emph{card} transforms the subject number of \emph{\code{7}} according to the
\emph{card\'s} secret loop size. The result is called the \emph{card\'s public
key}.
\item The \emph{door} transforms the subject number of \emph{\code{7}} according to the
\emph{door\'s} secret loop size. The result is called the \emph{door\'s public
key}.
\item The card and door use the wireless RFID signal to transmit the two
public keys (your puzzle input) to the other device. Now, the \emph{card}
has the \emph{door\'s} public key, and the \emph{door} has the \emph{card\'s}
public key. Because you can eavesdrop on the signal, you have both
public keys, but neither device\'s loop size.
\item The \emph{card} transforms the subject number of \emph{the door\'s public key}
according to the \emph{card\'s} loop size. The result is the \emph{encryption
key}.
\item The \emph{door} transforms the subject number of \emph{the card\'s public key}
according to the \emph{door\'s} loop size. The result is the same
\emph{encryption key} as the \emph{card} calculated.
}

If you can use the two public keys to determine each device\'s loop
size, you will have enough information to calculate the secret
\emph{encryption key} that the card and door use to communicate; this would
let you send the \code{unlock} command directly to the door!

For example, suppose you know that the card\'s public key is \code{5764801}.
With a little trial and error, you can work out that the card\'s loop
size must be \emph{\code{8}}, because transforming the initial subject number of
\code{7} with a loop size of \code{8} produces \code{5764801}.

Then, suppose you know that the door\'s public key is \code{17807724}. By the
same process, you can determine that the door\'s loop size is \emph{\code{11}},
because transforming the initial subject number of \code{7} with a loop size
of \code{11} produces \code{17807724}.

At this point, you can use either device\'s loop size with the other
device\'s public key to calculate the \emph{encryption key}. Transforming the
subject number of \code{17807724} (the door\'s public key) with a loop size
of \code{8} (the card\'s loop size) produces the encryption key,
\emph{\code{14897079}}. (Transforming the subject number of \code{5764801} (the card\'s
public key) with a loop size of \code{11} (the door\'s loop size) produces
the same encryption key: \emph{\code{14897079}}.)

\emph{What encryption key is the handshake trying to establish?}

\strong{Part Two}

\emph{(Use have to manually add this yourself.)}

\emph{(Try using \code{convert_clipboard_html_to_roxygen_md()})}
}
\examples{
solve_handshake_encryption_key(example_handshake_data(2))
f25b()
}
