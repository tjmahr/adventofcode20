% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day23.R
\name{day23}
\alias{day23}
\alias{play_crab_cups}
\alias{sort_crab_cups}
\alias{example_crab_cups}
\title{Day 23: Crab Cups}
\usage{
play_crab_cups(x, n = 1)

sort_crab_cups(x)

example_crab_cups(example = 1)
}
\arguments{
\item{x}{some data}

\item{n}{Number of turns to play the crab cup game.}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One, \code{play_crab_cups(x, n)} returns plays \code{n} turns of the
crab cup game. \code{sort_crab_cups()} prints the numbers after 1 in a string.
... For Part Two, \code{f23b(x)} returns ....
}
\description{
\href{https://adventofcode.com/2020/day/23}{Crab Cups}
}
\details{
\strong{Part One}

The small crab challenges \emph{you} to a game! The crab is going to mix up
some cups, and you have to predict where they\'ll end up.

The cups will be arranged in a circle and labeled \emph{clockwise} (your
puzzle input). For example, if your labeling were \code{32415}, there would
be five cups in the circle; going clockwise around the circle from the
first cup, the cups would be labeled \code{3}, \code{2}, \code{4}, \code{1}, \code{5}, and then
back to \code{3} again.

Before the crab starts, it will designate the first cup in your list as
the \emph{current cup}. The crab is then going to do \emph{100 moves}.

Each \emph{move}, the crab does the following actions:
\itemize{
\item The crab picks up the \emph{three cups} that are immediately \emph{clockwise}
of the \emph{current cup}. They are removed from the circle; cup spacing
is adjusted as necessary to maintain the circle.
\item The crab selects a \emph{destination cup}: the cup with a \emph{label} equal
to the \emph{current cup\'s} label minus one. If this would select one of
the cups that was just picked up, the crab will keep subtracting one
until it finds a cup that wasn\'t just picked up. If at any point in
this process the value goes below the lowest value on any cup\'s
label, it \emph{wraps around} to the highest value on any cup\'s label
instead.
\item The crab places the cups it just picked up so that they are
\emph{immediately clockwise} of the destination cup. They keep the same
order as when they were picked up.
\item The crab selects a new \emph{current cup}: the cup which is immediately
clockwise of the current cup.
}

For example, suppose your cup labeling were \code{389125467}. If the crab
were to do merely 10 moves, the following changes would occur:\preformatted{-- move 1 --
cups: (3) 8  9  1  2  5  4  6  7
pick up: 8, 9, 1
destination: 2

-- move 2 --
cups:  3 (2) 8  9  1  5  4  6  7
pick up: 8, 9, 1
destination: 7

-- move 3 --
cups:  3  2 (5) 4  6  7  8  9  1
pick up: 4, 6, 7
destination: 3

-- move 4 --
cups:  7  2  5 (8) 9  1  3  4  6
pick up: 9, 1, 3
destination: 7

-- move 5 --
cups:  3  2  5  8 (4) 6  7  9  1
pick up: 6, 7, 9
destination: 3

-- move 6 --
cups:  9  2  5  8  4 (1) 3  6  7
pick up: 3, 6, 7
destination: 9

-- move 7 --
cups:  7  2  5  8  4  1 (9) 3  6
pick up: 3, 6, 7
destination: 8

-- move 8 --
cups:  8  3  6  7  4  1  9 (2) 5
pick up: 5, 8, 3
destination: 1

-- move 9 --
cups:  7  4  1  5  8  3  9  2 (6)
pick up: 7, 4, 1
destination: 5

-- move 10 --
cups: (5) 7  4  1  8  3  9  2  6
pick up: 7, 4, 1
destination: 3

-- final --
cups:  5 (8) 3  7  4  1  9  2  6
}

In the above example, the cups\' values are the labels as they appear
moving clockwise around the circle; the \emph{current cup} is marked with
\verb{( )}.

After the crab is done, what order will the cups be in? Starting \emph{after
the cup labeled \code{1}}, collect the other cups\' labels clockwise into a
single string with no extra characters; each number except \code{1} should
appear exactly once. In the above example, after 10 moves, the cups
clockwise from \code{1} are labeled \code{9}, \code{2}, \code{6}, \code{5}, and so on, producing
\emph{\code{92658374}}. If the crab were to complete all 100 moves, the order
after cup \code{1} would be \emph{\code{67384529}}.

Using your labeling, simulate 100 moves. \emph{What are the labels on the
cups after cup \code{1}?}

\strong{Part Two}

Due to what you can only assume is a mistranslation (you\'re [not
exactly fluent in
Crab]{title="If I were going for a programming language pun here, I'd say you were a little... RUSTy."}),
you are quite surprised when the crab starts arranging \emph{many} cups in a
circle on your raft - \emph{one million} (\code{1000000}) in total.

Your labeling is still correct for the first few cups; after that, the
remaining cups are just numbered in an increasing fashion starting from
the number after the highest number in your list and proceeding one by
one until one million is reached. (For example, if your labeling were
\code{54321}, the cups would be numbered \code{5}, \code{4}, \code{3}, \code{2}, \code{1}, and then
start counting up from \code{6} until one million is reached.) In this way,
every number from one through one million is used exactly once.

After discovering where you made the mistake in translating Crab
Numbers, you realize the small crab isn\'t going to do merely 100 moves;
the crab is going to do \emph{ten million} (\code{10000000}) moves!

The crab is going to hide your \emph{stars} - one each - under the \emph{two cups
that will end up immediately clockwise of cup \code{1}}. You can have them if
you predict what the labels on those cups will be when the crab is
finished.

In the above example (\code{389125467}), this would be \code{934001} and then
\code{159792}; multiplying these together produces \emph{\code{149245887792}}.

Determine which two cups will end up immediately clockwise of cup \code{1}.
\emph{What do you get if you multiply their labels together?}
}
\examples{
play_crab_cups(example_crab_cups(), 1)
sort_crab_cups(play_crab_cups(example_crab_cups(), 1))
f23b()
}
