% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day09.R
\name{day09}
\alias{day09}
\alias{find_xmas_preamble_mismatch}
\alias{find_summing_streak}
\alias{example_xmas_preamble}
\title{Day 09: Encoding Error}
\usage{
find_xmas_preamble_mismatch(x, window_size)

find_summing_streak(x, target)

example_xmas_preamble()
}
\arguments{
\item{x}{Vector of preamble numbers.}

\item{window_size}{size of the window for the summing rule.}

\item{target}{number to find the sum of in Part Two.}
}
\value{
For Part One, \code{find_xmas_preamble_mismatch()} the first item in \code{x}
where the previous \code{window_size} numbers do not contain a pair that sums to
\code{x}. For Part Two, \code{find_summing_streak(x)} returns the streak of numbers
that sum to \code{target}.
}
\description{
\href{https://adventofcode.com/2020/day/9}{Encoding Error}
}
\details{
\strong{Part One}

attention to an open data port on the little screen in the seat in front
of you.

Though the port is non-standard, you manage to connect it to your
computer through the clever use of several paperclips. Upon connection,
the port outputs a series of numbers (your puzzle input).

The data appears to be encrypted with the eXchange-Masking Addition
System ([XMAS]{title="No relation."}) which, conveniently for you, is an
old cypher with an important weakness.

XMAS starts by transmitting a \emph{preamble} of 25 numbers. After that, each
number you receive should be the sum of any two of the 25 immediately
previous numbers. The two numbers will have different values, and there
might be more than one such pair.

For example, suppose your preamble consists of the numbers \code{1} through
\code{25} in a random order. To be valid, the next number must be the sum of
two of those numbers:
\itemize{
\item \code{26} would be a \emph{valid} next number, as it could be \code{1} plus \code{25}
(or many other pairs, like \code{2} and \code{24}).
\item \code{49} would be a \emph{valid} next number, as it is the sum of \code{24} and
\code{25}.
\item \code{100} would \emph{not} be valid; no two of the previous 25 numbers sum to
\code{100}.
\item \code{50} would also \emph{not} be valid; although \code{25} appears in the
previous 25 numbers, the two numbers in the pair must be different.
}

Suppose the 26th number is \code{45}, and the first number (no longer an
option, as it is more than 25 numbers ago) was \code{20}. Now, for the next
number to be valid, there needs to be some pair of numbers among
\code{1}-\code{19}, \code{21}-\code{25}, or \code{45} that add up to it:
\itemize{
\item \code{26} would still be a \emph{valid} next number, as \code{1} and \code{25} are still
within the previous 25 numbers.
\item \code{65} would \emph{not} be valid, as no two of the available numbers sum to
it.
\item \code{64} and \code{66} would both be \emph{valid}, as they are the result of
\code{19+45} and \code{21+45} respectively.
}

Here is a larger example which only considers the previous \emph{5} numbers
(and has a preamble of length 5):\preformatted{35
20
15
25
47
40
62
55
65
95
102
117
150
182
127
219
299
277
309
576
}

In this example, after the 5-number preamble, almost every number is the
sum of two of the previous 5 numbers; the only number that does not
follow this rule is \emph{\code{127}}.

The first step of attacking the weakness in the XMAS data is to find the
first number in the list (after the preamble) which is \emph{not} the sum of
two of the 25 numbers before it. \emph{What is the first number that does not
have this property?}

\strong{Part Two}

The final step in breaking the XMAS encryption relies on the invalid
number you just found: you must \emph{find a contiguous set of at least two
numbers} in your list which sum to the invalid number from step 1.

Again consider the above example:\preformatted{35
20
15
25
47
40
62
55
65
95
102
117
150
182
127
219
299
277
309
576
}

In this list, adding up all of the numbers from \code{15} through \code{40}
produces the invalid number from step 1, \code{127}. (Of course, the
contiguous set of numbers in your actual list might be much longer.)

To find the \emph{encryption weakness}, add together the \emph{smallest} and
\emph{largest} number in this contiguous range; in this example, these are
\code{15} and \code{47}, producing \emph{\code{62}}.

\emph{What is the encryption weakness in your XMAS-encrypted list of
numbers?}
}
\examples{
x <- example_xmas_preamble()
result <- find_xmas_preamble_mismatch(x, 5)
find_summing_streak(x, result)
}
